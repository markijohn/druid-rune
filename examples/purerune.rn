

fn btn_normal(name) {
    button(name).on_click( () ).fix_height( 50.0 )
}

/*
const STYLER_KEY = #{
	red : rgba(1,2,3,4)
};

const STYLE = `
button { background-color:red; }
flex { space-sizing:12px; }
#myid { font-size:10px; }
`;

fn builder() {
    let root = builder();
    root.set_style( STYLE, STYLE_KEY ); //or set_style( STYLE );
    let Q = builder.event_jq_style();
    Q("#myId").click( || print("Click myId") );
    builder.click( #{
        "#myId .yourClass" : |this, data| {

        }
    });
    builder
}

fn new_flex() {
    let Q = builder();

    let widget =
    Q("#myid myClass twoClass").flex()
        .painter( |ctx| ctx.draw_line( (0,0), (100,100) ) );

    widget
}
*/

fn draw_bound(ctx) {
    let bounds = ctx.size().to_rect();

    if ctx.is_hot() {
        //포커스
        ctx.fill(bounds, Color::rgb8(0,103,187) );
        ctx.stroke(bounds.inset(-0.5), Color::rgb8(0,140,255), 1.0);
    } else {
        //기본
        ctx.fill(bounds, Color::rgb8(0,73,131) );
    }

    if ctx.is_active() {
        //pressed
        //ctx.fill(bounds, Color::rgb8(0,73,134) );
        //ctx.fill(ctx.size().to_rect(), Color::rgb8(0,73,134) );
    }
}

pub fn main() {
    print("START");
    tuplecheck( (1. , 2.) );
    dbg( CrossAxisAlignment::Start );
    dbg( UnitPoint::TOP );
    //call_rfn( |a,b| a+b );
    //let N2_BRUSH = Brush::color(Color::Rgba32(334433));
    //tes_into("1234");
    //tes_into( [1,2,3,4] );
    let mycol = Color::Rgba32(333333);

    let r =
    flex()
        .with( btn_normal("OK12") )
        .with( btn_normal("CANCEL") )
        .with( flex::column()
            .with( button("HI") )
            .with( button("NEXT").border( Color::Rgba32(0xFFFFFFFF), 2.0 ) )
        )
        .with( label("My Label") )
        .with( checkbox("FSD") )
        .with( image("image.png").fill_mode(FillStrat::None).fix_size( 100.0, 50.0 ) )
        .with( spinner() )
        .with( progressbar() )
        .with( painter( draw_bound ).fix_size( 100.0, 50.0 ) );
    r


}